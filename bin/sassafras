#!/usr/bin/env ruby
#
#  Created on 2008-12-14.
#  Copyright (c) 2008. All rights reserved.

begin
  require 'sassafras'
rescue LoadError
  require 'rubygems'
  gem     'sassafras'
  require 'sassafras'
end

require 'optparse'

# NOTE: the option -p/--path= is given as an example, and should probably be replaced in your application.

OPTIONS = {
  :type     => 'basic',
  :format   => 'sass'
}
MANDATORY_OPTIONS = %w(base)

parser = OptionParser.new do |opts|
  opts.banner = <<BANNER

Sassafras v#{Sassafras::VERSION::STRING} makes you sexy!

Usage: #{File.basename($0)} [options]

Options are:
BANNER
  opts.separator ""
  opts.on("-b", "--base=BASE", String,
          "The base color for the color theme",
          "Required.") { |OPTIONS[:base]| }
  opts.on("-t", "--type=TYPE", String,
          "Type of color scheme (basic|complementary|analogous|triadic|split_complementary|rectangle|square)",
          "Default: basic") { |OPTIONS[:type]| }
  opts.on('-f', '--format=FORMAT', String,
          "Format (sass|html)",
          "Default: sass") { |OPTIONS[:format]| }
  opts.on("-h", "--help",
          "Show this help message.") { puts opts; exit }
  opts.parse!(ARGV)

  if MANDATORY_OPTIONS && MANDATORY_OPTIONS.find { |option| OPTIONS[option.to_sym].nil? }
    puts opts; exit
  end
end

path = OPTIONS[:path]

theme = Sassafras::Theme.create(OPTIONS[:type], OPTIONS[:base])

if OPTIONS[:format] == 'html'
  Sassafras::HTMLSwatch.new(theme)
else
  puts theme.sass 
end


